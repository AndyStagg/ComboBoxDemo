<Window x:Class="ComboBoxDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ComboBoxDemo"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <x:Array x:Key="ExampleItems" Type="{x:Type local:ExampleItem}">
            <local:ExampleItem DisplayText="Item 1" Color="Red" />
            <local:ExampleItem DisplayText="Item 2" Color="Green" />
            <local:ExampleItem DisplayText="Item 3" Color="Blue" />
            <local:ExampleItem DisplayText="Item 4" Color="Black" />
        </x:Array>
        <!--<Style x:Key="ComboBoxStyle1" TargetType="{x:Type ComboBox}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MaterialDesignTextBoxBorder}"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="Foreground" Value="{Binding (TextElement.Foreground), RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type FrameworkElement}}}"/>
            <Setter Property="ItemContainerStyle">
                <Setter.Value>
                    <Style TargetType="{x:Type ComboBoxItem}">
                        <Setter Property="Tag" Value="AllowCollapse"/>
                        <Style.BasedOn>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Padding" Value="16,8"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Grid x:Name="GridWrapper">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                <VisualTransition.GeneratedEasingFunction>
                                                                    <CircleEase EasingMode="EaseOut"/>
                                                                </VisualTransition.GeneratedEasingFunction>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unselected"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="Unfocused"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="BackBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Border.Background>
                                                </Border>
                                                <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                    <Border.Background>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Border.Background>
                                                </Border>
                                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <materialDesign:Ripple.Feedback>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </materialDesign:Ripple.Feedback>
                                                </materialDesign:Ripple>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="GridWrapper" Value="0.56"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Tag" Value="AllowCollapse"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Height" Value="0"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Style.BasedOn>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="0,4"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Validation.ErrorTemplate">
                <Setter.Value>
                    <ControlTemplate/>
                </Setter.Value>
            </Setter>
            <Setter Property="materialDesign:TextFieldAssist.TextBoxViewMargin" Value="0"/>
            <Setter Property="materialDesign:TextFieldAssist.UnderlineBrush" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="materialDesign:ColorZoneAssist.Mode" Value="Standard"/>
            <Setter Property="materialDesign:HintAssist.Foreground" Value="{DynamicResource PrimaryHueMidBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBox}"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="True">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True"/>
                </Trigger>
                <Trigger Property="materialDesign:ComboBoxAssist.ShowSelectedItem" Value="True">
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="{x:Type ComboBoxItem}">
                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                <Setter Property="Padding" Value="16,8"/>
                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource FindAncestor, AncestorLevel=1, AncestorType={x:Type ItemsControl}}}"/>
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="BorderBrush" Value="Transparent"/>
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="FocusVisualStyle">
                                    <Setter.Value>
                                        <Style>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate>
                                                        <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                                            <Grid x:Name="GridWrapper">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto"/>
                                                </Grid.RowDefinitions>
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" Storyboard="{x:Null}" To="Normal">
                                                                <VisualTransition.GeneratedEasingFunction>
                                                                    <CircleEase EasingMode="EaseOut"/>
                                                                </VisualTransition.GeneratedEasingFunction>
                                                            </VisualTransition>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Normal"/>
                                                        <VisualState x:Name="MouseOver">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="SelectionStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="{x:Null}"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Selected">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.18" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="SelectedBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unselected"/>
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="FocusStates">
                                                        <VisualStateGroup.Transitions>
                                                            <VisualTransition From="{x:Null}" GeneratedDuration="0:0:0.3" GeneratedEasingFunction="{x:Null}" Storyboard="{x:Null}" To="Unfocused"/>
                                                        </VisualStateGroup.Transitions>
                                                        <VisualState x:Name="Focused">
                                                            <Storyboard>
                                                                <DoubleAnimation Duration="0" To="0.1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="MouseOverBorder"/>
                                                            </Storyboard>
                                                        </VisualState>
                                                        <VisualState x:Name="Unfocused"/>
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                                <Border x:Name="BackBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
                                                <Border x:Name="MouseOverBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Opacity="0" SnapsToDevicePixels="True">
                                                    <Border.Background>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Border.Background>
                                                </Border>
                                                <Border x:Name="SelectedBorder" Opacity="0" RenderTransformOrigin="0.5,0.5">
                                                    <Border.Background>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </Border.Background>
                                                </Border>
                                                <materialDesign:Ripple ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" RecognizesAccessKey="False" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Stretch" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                                    <materialDesign:Ripple.Feedback>
                                                        <TemplateBinding Property="Foreground">
                                                            <TemplateBinding.Converter>
                                                                <materialDesign:BrushRoundConverter HighValue="White" LowValue="Black"/>
                                                            </TemplateBinding.Converter>
                                                        </TemplateBinding>
                                                    </materialDesign:Ripple.Feedback>
                                                </materialDesign:Ripple>
                                            </Grid>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Opacity" TargetName="GridWrapper" Value="0.56"/>
                                                </Trigger>
                                                <MultiTrigger>
                                                    <MultiTrigger.Conditions>
                                                        <Condition Property="Tag" Value="AllowCollapse"/>
                                                        <Condition Property="IsSelected" Value="True"/>
                                                    </MultiTrigger.Conditions>
                                                    <Setter Property="Height" Value="0"/>
                                                </MultiTrigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>-->
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>


        <ComboBox Width="150" 
                  Margin="2" 
                  
                  HorizontalContentAlignment="Stretch"
                  
                  materialDesign:HintAssist.Hint="Select Item"
                  
                  ItemsSource="{StaticResource ExampleItems}" Style="{DynamicResource ComboBoxStyle1}">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <TextBlock Grid.Column="0" Text="{Binding DisplayText}" />

                        <Ellipse Grid.Column="1" Width="10" Height="10" Fill="{Binding Color}"/>
                    </Grid>
                </DataTemplate>
            </ComboBox.ItemTemplate>
            <ComboBox.ItemContainerStyle>
                <Style TargetType="ComboBoxItem" BasedOn="{StaticResource MaterialDesignComboBoxItemStyle}">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ComboBox.ItemContainerStyle>
        </ComboBox>
    </Grid>
</Window>
